/*
 * Interface wrapper code.
 *
 * Generated by SIP 4.19.16
 */

#include "sipAPIpyqtpvwidgets.h"

#line 92 "pyqtpvwidgets.sip"
  #include "qtpvwidgets.h"
#line 12 "./sippyqtpvwidgetsQMComboBox.cpp"

#line 28 "/usr/share/sip/PyQt5/QtWidgets/qwidget.sip"
#include <qwidget.h>
#line 16 "./sippyqtpvwidgetsQMComboBox.cpp"
#line 354 "/usr/share/sip/PyQt5/QtGui/qevent.sip"
#include <qevent.h>
#line 19 "./sippyqtpvwidgetsQMComboBox.cpp"
#line 375 "/usr/share/sip/PyQt5/QtGui/qevent.sip"
#include <qevent.h>
#line 22 "./sippyqtpvwidgetsQMComboBox.cpp"
#line 27 "/usr/share/sip/PyQt5/QtCore/qstring.sip"
#include <qstring.h>
#line 25 "./sippyqtpvwidgetsQMComboBox.cpp"
#line 26 "/usr/share/sip/PyQt5/QtCore/qvariant.sip"
#include <qvariant.h>
#line 28 "./sippyqtpvwidgetsQMComboBox.cpp"
#line 26 "/usr/share/sip/PyQt5/QtCore/qnamespace.sip"
#include <qnamespace.h>
#line 31 "./sippyqtpvwidgetsQMComboBox.cpp"
#line 500 "/usr/share/sip/PyQt5/QtGui/qevent.sip"
#include <qevent.h>
#line 34 "./sippyqtpvwidgetsQMComboBox.cpp"
#line 473 "/usr/share/sip/PyQt5/QtGui/qevent.sip"
#include <qevent.h>
#line 37 "./sippyqtpvwidgetsQMComboBox.cpp"
#line 253 "/usr/share/sip/PyQt5/QtGui/qevent.sip"
#include <qevent.h>
#line 40 "./sippyqtpvwidgetsQMComboBox.cpp"
#line 205 "/usr/share/sip/PyQt5/QtGui/qevent.sip"
#include <qevent.h>
#line 43 "./sippyqtpvwidgetsQMComboBox.cpp"
#line 462 "/usr/share/sip/PyQt5/QtGui/qevent.sip"
#include <qevent.h>
#line 46 "./sippyqtpvwidgetsQMComboBox.cpp"
#line 451 "/usr/share/sip/PyQt5/QtGui/qevent.sip"
#include <qevent.h>
#line 49 "./sippyqtpvwidgetsQMComboBox.cpp"
#line 389 "/usr/share/sip/PyQt5/QtGui/qevent.sip"
#include <qevent.h>
#line 52 "./sippyqtpvwidgetsQMComboBox.cpp"
#line 416 "/usr/share/sip/PyQt5/QtGui/qevent.sip"
#include <qevent.h>
#line 55 "./sippyqtpvwidgetsQMComboBox.cpp"
#line 26 "/usr/share/sip/PyQt5/QtCore/qcoreevent.sip"
#include <qcoreevent.h>
#line 58 "./sippyqtpvwidgetsQMComboBox.cpp"
#line 815 "/usr/share/sip/PyQt5/QtWidgets/qstyleoption.sip"
#include <qstyleoption.h>
#line 61 "./sippyqtpvwidgetsQMComboBox.cpp"
#line 26 "/usr/share/sip/PyQt5/QtWidgets/qcompleter.sip"
#include <qcompleter.h>
#line 64 "./sippyqtpvwidgetsQMComboBox.cpp"
#line 26 "/usr/share/sip/PyQt5/QtCore/qsize.sip"
#include <qsize.h>
#line 67 "./sippyqtpvwidgetsQMComboBox.cpp"
#line 26 "/usr/share/sip/PyQt5/QtWidgets/qabstractitemview.sip"
#include <qabstractitemview.h>
#line 70 "./sippyqtpvwidgetsQMComboBox.cpp"
#line 26 "/usr/share/sip/PyQt5/QtGui/qicon.sip"
#include <qicon.h>
#line 73 "./sippyqtpvwidgetsQMComboBox.cpp"
#line 36 "/usr/share/sip/PyQt5/QtCore/qstringlist.sip"
#include <qstringlist.h>
#line 76 "./sippyqtpvwidgetsQMComboBox.cpp"
#line 26 "/usr/share/sip/PyQt5/QtCore/qabstractitemmodel.sip"
#include <qabstractitemmodel.h>
#line 79 "./sippyqtpvwidgetsQMComboBox.cpp"
#line 111 "/usr/share/sip/PyQt5/QtCore/qabstractitemmodel.sip"
#include <qabstractitemmodel.h>
#line 82 "./sippyqtpvwidgetsQMComboBox.cpp"
#line 26 "/usr/share/sip/PyQt5/QtWidgets/qabstractitemdelegate.sip"
#include <qabstractitemdelegate.h>
#line 85 "./sippyqtpvwidgetsQMComboBox.cpp"
#line 26 "/usr/share/sip/PyQt5/QtGui/qvalidator.sip"
#include <qvalidator.h>
#line 88 "./sippyqtpvwidgetsQMComboBox.cpp"
#line 26 "/usr/share/sip/PyQt5/QtWidgets/qlineedit.sip"
#include <qlineedit.h>
#line 91 "./sippyqtpvwidgetsQMComboBox.cpp"
#line 26 "/usr/share/sip/PyQt5/QtWidgets/qcombobox.sip"
#include <qcombobox.h>
#line 94 "./sippyqtpvwidgetsQMComboBox.cpp"
#line 26 "/usr/share/sip/PyQt5/QtCore/qnamespace.sip"
#include <qnamespace.h>
#line 97 "./sippyqtpvwidgetsQMComboBox.cpp"
#line 26 "/usr/share/sip/PyQt5/QtGui/qpainter.sip"
#include <qpainter.h>
#line 100 "./sippyqtpvwidgetsQMComboBox.cpp"
#line 30 "/usr/share/sip/PyQt5/QtCore/qbytearray.sip"
#include <qbytearray.h>
#line 103 "./sippyqtpvwidgetsQMComboBox.cpp"
#line 26 "/usr/share/sip/PyQt5/QtGui/qwindow.sip"
#include <qwindow.h>
#line 106 "./sippyqtpvwidgetsQMComboBox.cpp"
#line 26 "/usr/share/sip/PyQt5/QtCore/qnamespace.sip"
#include <qnamespace.h>
#line 109 "./sippyqtpvwidgetsQMComboBox.cpp"
#line 26 "/usr/share/sip/PyQt5/QtGui/qpixmap.sip"
#include <qpixmap.h>
#line 112 "./sippyqtpvwidgetsQMComboBox.cpp"
#line 26 "/usr/share/sip/PyQt5/QtCore/qrect.sip"
#include <qrect.h>
#line 115 "./sippyqtpvwidgetsQMComboBox.cpp"
#line 26 "/usr/share/sip/PyQt5/QtCore/qnamespace.sip"
#include <qnamespace.h>
#line 118 "./sippyqtpvwidgetsQMComboBox.cpp"
#line 26 "/usr/share/sip/PyQt5/QtCore/qmargins.sip"
#include <qmargins.h>
#line 121 "./sippyqtpvwidgetsQMComboBox.cpp"
#line 26 "/usr/share/sip/PyQt5/QtCore/qnamespace.sip"
#include <qnamespace.h>
#line 124 "./sippyqtpvwidgetsQMComboBox.cpp"
#line 26 "/usr/share/sip/PyQt5/QtWidgets/qgraphicseffect.sip"
#include <qgraphicseffect.h>
#line 127 "./sippyqtpvwidgetsQMComboBox.cpp"
#line 26 "/usr/share/sip/PyQt5/QtWidgets/qgraphicsproxywidget.sip"
#include <qgraphicsproxywidget.h>
#line 130 "./sippyqtpvwidgetsQMComboBox.cpp"
#line 189 "/usr/share/sip/PyQt5/QtCore/qglobal.sip"
#include <QtGlobal>
#line 133 "./sippyqtpvwidgetsQMComboBox.cpp"
#line 26 "/usr/share/sip/PyQt5/QtCore/qlocale.sip"
#include <qlocale.h>
#line 136 "./sippyqtpvwidgetsQMComboBox.cpp"
#line 26 "/usr/share/sip/PyQt5/QtGui/qpaintdevice.sip"
#include <qpaintdevice.h>
#line 139 "./sippyqtpvwidgetsQMComboBox.cpp"
#line 26 "/usr/share/sip/PyQt5/QtCore/qpoint.sip"
#include <qpoint.h>
#line 142 "./sippyqtpvwidgetsQMComboBox.cpp"
#line 26 "/usr/share/sip/PyQt5/QtGui/qregion.sip"
#include <qregion.h>
#line 145 "./sippyqtpvwidgetsQMComboBox.cpp"
#line 28 "/usr/share/sip/PyQt5/QtWidgets/qwidget.sip"
#include <qwidget.h>
#line 148 "./sippyqtpvwidgetsQMComboBox.cpp"
#line 26 "/usr/share/sip/PyQt5/QtGui/qfontinfo.sip"
#include <qfontinfo.h>
#line 151 "./sippyqtpvwidgetsQMComboBox.cpp"
#line 26 "/usr/share/sip/PyQt5/QtGui/qfontmetrics.sip"
#include <qfontmetrics.h>
#line 154 "./sippyqtpvwidgetsQMComboBox.cpp"
#line 26 "/usr/share/sip/PyQt5/QtGui/qfont.sip"
#include <qfont.h>
#line 157 "./sippyqtpvwidgetsQMComboBox.cpp"
#line 561 "/usr/share/sip/PyQt5/QtGui/qevent.sip"
#include <qevent.h>
#line 160 "./sippyqtpvwidgetsQMComboBox.cpp"
#line 610 "/usr/share/sip/PyQt5/QtGui/qevent.sip"
#include <qevent.h>
#line 163 "./sippyqtpvwidgetsQMComboBox.cpp"
#line 583 "/usr/share/sip/PyQt5/QtGui/qevent.sip"
#include <qevent.h>
#line 166 "./sippyqtpvwidgetsQMComboBox.cpp"
#line 599 "/usr/share/sip/PyQt5/QtGui/qevent.sip"
#include <qevent.h>
#line 169 "./sippyqtpvwidgetsQMComboBox.cpp"
#line 666 "/usr/share/sip/PyQt5/QtGui/qevent.sip"
#include <qevent.h>
#line 172 "./sippyqtpvwidgetsQMComboBox.cpp"
#line 296 "/usr/share/sip/PyQt5/QtGui/qevent.sip"
#include <qevent.h>
#line 175 "./sippyqtpvwidgetsQMComboBox.cpp"
#line 429 "/usr/share/sip/PyQt5/QtGui/qevent.sip"
#include <qevent.h>
#line 178 "./sippyqtpvwidgetsQMComboBox.cpp"
#line 403 "/usr/share/sip/PyQt5/QtGui/qevent.sip"
#include <qevent.h>
#line 181 "./sippyqtpvwidgetsQMComboBox.cpp"
#line 52 "/usr/share/sip/PyQt5/QtGui/qpaintengine.sip"
#include <qpaintengine.h>
#line 184 "./sippyqtpvwidgetsQMComboBox.cpp"
#line 149 "/usr/share/sip/PyQt5/QtCore/qpycore_qlist.sip"
#include <qlist.h>
#line 187 "./sippyqtpvwidgetsQMComboBox.cpp"
#line 26 "/usr/share/sip/PyQt5/QtWidgets/qaction.sip"
#include <qaction.h>
#line 190 "./sippyqtpvwidgetsQMComboBox.cpp"
#line 26 "/usr/share/sip/PyQt5/QtWidgets/qlayout.sip"
#include <qlayout.h>
#line 193 "./sippyqtpvwidgetsQMComboBox.cpp"
#line 26 "/usr/share/sip/PyQt5/QtWidgets/qsizepolicy.sip"
#include <qsizepolicy.h>
#line 196 "./sippyqtpvwidgetsQMComboBox.cpp"
#line 26 "/usr/share/sip/PyQt5/QtCore/qnamespace.sip"
#include <qnamespace.h>
#line 199 "./sippyqtpvwidgetsQMComboBox.cpp"
#line 26 "/usr/share/sip/PyQt5/QtGui/qkeysequence.sip"
#include <qkeysequence.h>
#line 202 "./sippyqtpvwidgetsQMComboBox.cpp"
#line 26 "/usr/share/sip/PyQt5/QtGui/qcursor.sip"
#include <qcursor.h>
#line 205 "./sippyqtpvwidgetsQMComboBox.cpp"
#line 26 "/usr/share/sip/PyQt5/QtGui/qbitmap.sip"
#include <qbitmap.h>
#line 208 "./sippyqtpvwidgetsQMComboBox.cpp"
#line 26 "/usr/share/sip/PyQt5/QtGui/qpalette.sip"
#include <qpalette.h>
#line 211 "./sippyqtpvwidgetsQMComboBox.cpp"
#line 26 "/usr/share/sip/PyQt5/QtWidgets/qstyle.sip"
#include <qstyle.h>
#line 214 "./sippyqtpvwidgetsQMComboBox.cpp"
#line 26 "/usr/share/sip/PyQt5/QtCore/qmetaobject.sip"
#include <qmetaobject.h>
#line 217 "./sippyqtpvwidgetsQMComboBox.cpp"
#line 247 "/usr/share/sip/PyQt5/QtCore/qcoreevent.sip"
#include <qcoreevent.h>
#line 220 "./sippyqtpvwidgetsQMComboBox.cpp"
#line 235 "/usr/share/sip/PyQt5/QtCore/qcoreevent.sip"
#include <qcoreevent.h>
#line 223 "./sippyqtpvwidgetsQMComboBox.cpp"
#line 28 "/usr/share/sip/PyQt5/QtCore/qobject.sip"
#include <qobject.h>
#line 226 "./sippyqtpvwidgetsQMComboBox.cpp"
#line 38 "/usr/share/sip/PyQt5/QtCore/qpycore_qlist.sip"
#include <qlist.h>
#line 229 "./sippyqtpvwidgetsQMComboBox.cpp"
#line 149 "/usr/share/sip/PyQt5/QtCore/qpycore_qlist.sip"
#include <qlist.h>
#line 232 "./sippyqtpvwidgetsQMComboBox.cpp"
#line 26 "/usr/share/sip/PyQt5/QtCore/qthread.sip"
#include <qthread.h>
#line 235 "./sippyqtpvwidgetsQMComboBox.cpp"
#line 26 "/usr/share/sip/PyQt5/QtCore/qnamespace.sip"
#include <qnamespace.h>
#line 238 "./sippyqtpvwidgetsQMComboBox.cpp"
#line 26 "/usr/share/sip/PyQt5/QtCore/qregexp.sip"
#include <qregexp.h>
#line 241 "./sippyqtpvwidgetsQMComboBox.cpp"
#line 26 "/usr/share/sip/PyQt5/QtCore/qregularexpression.sip"
#include <qregularexpression.h>
#line 244 "./sippyqtpvwidgetsQMComboBox.cpp"
#line 26 "/usr/share/sip/PyQt5/QtCore/qobjectdefs.sip"
#include <qobjectdefs.h>
#line 247 "./sippyqtpvwidgetsQMComboBox.cpp"


class sipQMComboBox : public  ::QMComboBox
{
public:
    sipQMComboBox( ::QWidget*);
    virtual ~sipQMComboBox();

    int qt_metacall(QMetaObject::Call, int, void **) SIP_OVERRIDE;
    void *qt_metacast(const char *) SIP_OVERRIDE;
    const QMetaObject *metaObject() const SIP_OVERRIDE;

    /*
     * There is a public method for every protected method visible from
     * this class.
     */
     ::QObject* sipProtect_sender() const;
    int sipProtect_receivers(const char*) const;
    void sipProtectVirt_timerEvent(bool, ::QTimerEvent*);
    void sipProtectVirt_childEvent(bool, ::QChildEvent*);
    void sipProtectVirt_customEvent(bool, ::QEvent*);
    void sipProtectVirt_connectNotify(bool,const  ::QMetaMethod&);
    void sipProtectVirt_disconnectNotify(bool,const  ::QMetaMethod&);
    int sipProtect_senderSignalIndex() const;
    bool sipProtect_isSignalConnected(const  ::QMetaMethod&) const;
    void sipProtectVirt_mouseDoubleClickEvent(bool, ::QMouseEvent*);
    void sipProtectVirt_mouseMoveEvent(bool, ::QMouseEvent*);
    void sipProtectVirt_enterEvent(bool, ::QEvent*);
    void sipProtectVirt_leaveEvent(bool, ::QEvent*);
    void sipProtectVirt_moveEvent(bool, ::QMoveEvent*);
    void sipProtectVirt_closeEvent(bool, ::QCloseEvent*);
    void sipProtectVirt_tabletEvent(bool, ::QTabletEvent*);
    void sipProtectVirt_actionEvent(bool, ::QActionEvent*);
    void sipProtectVirt_dragEnterEvent(bool, ::QDragEnterEvent*);
    void sipProtectVirt_dragMoveEvent(bool, ::QDragMoveEvent*);
    void sipProtectVirt_dragLeaveEvent(bool, ::QDragLeaveEvent*);
    void sipProtectVirt_dropEvent(bool, ::QDropEvent*);
    int sipProtectVirt_metric(bool, ::QPaintDevice::PaintDeviceMetric) const;
    void sipProtect_updateMicroFocus();
    void sipProtect_create( ::WId,bool,bool);
    void sipProtect_destroy(bool,bool);
    bool sipProtectVirt_focusNextPrevChild(bool,bool);
    bool sipProtect_focusNextChild();
    bool sipProtect_focusPreviousChild();
    bool sipProtectVirt_nativeEvent(bool,const  ::QByteArray&,void*,long*);
     ::QPainter* sipProtectVirt_sharedPainter(bool) const;
    void sipProtectVirt_initPainter(bool, ::QPainter*) const;
    void sipProtect_initStyleOption( ::QStyleOptionComboBox*) const;
    void sipProtectVirt_changeEvent(bool, ::QEvent*);
    void sipProtectVirt_resizeEvent(bool, ::QResizeEvent*);
    void sipProtectVirt_paintEvent(bool, ::QPaintEvent*);
    void sipProtectVirt_showEvent(bool, ::QShowEvent*);
    void sipProtectVirt_hideEvent(bool, ::QHideEvent*);
    void sipProtectVirt_mousePressEvent(bool, ::QMouseEvent*);
    void sipProtectVirt_mouseReleaseEvent(bool, ::QMouseEvent*);
    void sipProtectVirt_keyReleaseEvent(bool, ::QKeyEvent*);
    void sipProtectVirt_wheelEvent(bool, ::QWheelEvent*);
    void sipProtectVirt_contextMenuEvent(bool, ::QContextMenuEvent*);
    void sipProtectVirt_inputMethodEvent(bool, ::QInputMethodEvent*);

    /*
     * There is a protected method for every virtual method visible from
     * this class.
     */
protected:
    void initPainter( ::QPainter*) const SIP_OVERRIDE;
     ::QPainter* sharedPainter() const SIP_OVERRIDE;
    bool nativeEvent(const  ::QByteArray&,void*,long*) SIP_OVERRIDE;
    bool hasHeightForWidth() const SIP_OVERRIDE;
    bool focusNextPrevChild(bool) SIP_OVERRIDE;
     ::QVariant inputMethodQuery( ::Qt::InputMethodQuery) const SIP_OVERRIDE;
    void inputMethodEvent( ::QInputMethodEvent*) SIP_OVERRIDE;
    void changeEvent( ::QEvent*) SIP_OVERRIDE;
    void hideEvent( ::QHideEvent*) SIP_OVERRIDE;
    void showEvent( ::QShowEvent*) SIP_OVERRIDE;
    void dropEvent( ::QDropEvent*) SIP_OVERRIDE;
    void dragLeaveEvent( ::QDragLeaveEvent*) SIP_OVERRIDE;
    void dragMoveEvent( ::QDragMoveEvent*) SIP_OVERRIDE;
    void dragEnterEvent( ::QDragEnterEvent*) SIP_OVERRIDE;
    void actionEvent( ::QActionEvent*) SIP_OVERRIDE;
    void tabletEvent( ::QTabletEvent*) SIP_OVERRIDE;
    void contextMenuEvent( ::QContextMenuEvent*) SIP_OVERRIDE;
    void closeEvent( ::QCloseEvent*) SIP_OVERRIDE;
    void resizeEvent( ::QResizeEvent*) SIP_OVERRIDE;
    void moveEvent( ::QMoveEvent*) SIP_OVERRIDE;
    void paintEvent( ::QPaintEvent*) SIP_OVERRIDE;
    void leaveEvent( ::QEvent*) SIP_OVERRIDE;
    void enterEvent( ::QEvent*) SIP_OVERRIDE;
    void keyReleaseEvent( ::QKeyEvent*) SIP_OVERRIDE;
    void wheelEvent( ::QWheelEvent*) SIP_OVERRIDE;
    void mouseMoveEvent( ::QMouseEvent*) SIP_OVERRIDE;
    void mouseDoubleClickEvent( ::QMouseEvent*) SIP_OVERRIDE;
    void mouseReleaseEvent( ::QMouseEvent*) SIP_OVERRIDE;
    void mousePressEvent( ::QMouseEvent*) SIP_OVERRIDE;
    int heightForWidth(int) const SIP_OVERRIDE;
     ::QSize minimumSizeHint() const SIP_OVERRIDE;
     ::QSize sizeHint() const SIP_OVERRIDE;
    void setVisible(bool) SIP_OVERRIDE;
    int devType() const SIP_OVERRIDE;
     ::QPaintEngine* paintEngine() const SIP_OVERRIDE;
    int metric( ::QPaintDevice::PaintDeviceMetric) const SIP_OVERRIDE;
    bool event( ::QEvent*) SIP_OVERRIDE;
    bool eventFilter( ::QObject*, ::QEvent*) SIP_OVERRIDE;
    void timerEvent( ::QTimerEvent*) SIP_OVERRIDE;
    void childEvent( ::QChildEvent*) SIP_OVERRIDE;
    void customEvent( ::QEvent*) SIP_OVERRIDE;
    void connectNotify(const  ::QMetaMethod&) SIP_OVERRIDE;
    void disconnectNotify(const  ::QMetaMethod&) SIP_OVERRIDE;
    void showPopup() SIP_OVERRIDE;
    void hidePopup() SIP_OVERRIDE;

public:
    sipSimpleWrapper *sipPySelf;

private:
    sipQMComboBox(const sipQMComboBox &);
    sipQMComboBox &operator = (const sipQMComboBox &);

    char sipPyMethods[45];
};

sipQMComboBox::sipQMComboBox( ::QWidget*a0):  ::QMComboBox(a0), sipPySelf(SIP_NULLPTR)
{
    memset(sipPyMethods, 0, sizeof (sipPyMethods));
}

sipQMComboBox::~sipQMComboBox()
{
    sipInstanceDestroyedEx(&sipPySelf);
}

const QMetaObject *sipQMComboBox::metaObject() const
{
    if (sipGetInterpreter())
        return QObject::d_ptr->metaObject ? QObject::d_ptr->dynamicMetaObject() : sip_pyqtpvwidgets_qt_metaobject(sipPySelf,sipType_QMComboBox);

    return  ::QMComboBox::metaObject();
}

int sipQMComboBox::qt_metacall(QMetaObject::Call _c,int _id,void **_a)
{
    _id =  ::QMComboBox::qt_metacall(_c,_id,_a);

    if (_id >= 0)
        _id = sip_pyqtpvwidgets_qt_metacall(sipPySelf,sipType_QMComboBox,_c,_id,_a);

    return _id;
}

void *sipQMComboBox::qt_metacast(const char *_clname)
{
    void *sipCpp;

    return (sip_pyqtpvwidgets_qt_metacast(sipPySelf, sipType_QMComboBox, _clname, &sipCpp) ? sipCpp :  ::QMComboBox::qt_metacast(_clname));
}

void sipQMComboBox::initPainter( ::QPainter*a0) const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[0]),sipPySelf,SIP_NULLPTR,sipName_initPainter);

    if (!sipMeth)
    {
         ::QMComboBox::initPainter(a0);
        return;
    }

    extern void sipVH_pyqtpvwidgets_35(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QPainter*);

    sipVH_pyqtpvwidgets_35(sipGILState, sipImportedVirtErrorHandlers_pyqtpvwidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

 ::QPainter* sipQMComboBox::sharedPainter() const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[1]),sipPySelf,SIP_NULLPTR,sipName_sharedPainter);

    if (!sipMeth)
        return  ::QMComboBox::sharedPainter();

    extern  ::QPainter* sipVH_pyqtpvwidgets_34(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *);

    return sipVH_pyqtpvwidgets_34(sipGILState, sipImportedVirtErrorHandlers_pyqtpvwidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth);
}

bool sipQMComboBox::nativeEvent(const  ::QByteArray& a0,void*a1,long*a2)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[2],sipPySelf,SIP_NULLPTR,sipName_nativeEvent);

    if (!sipMeth)
        return  ::QMComboBox::nativeEvent(a0,a1,a2);

    extern bool sipVH_pyqtpvwidgets_33(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, const  ::QByteArray&,void*,long*);

    return sipVH_pyqtpvwidgets_33(sipGILState, sipImportedVirtErrorHandlers_pyqtpvwidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0, a1, a2);
}

bool sipQMComboBox::hasHeightForWidth() const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[3]),sipPySelf,SIP_NULLPTR,sipName_hasHeightForWidth);

    if (!sipMeth)
        return  ::QMComboBox::hasHeightForWidth();

    extern bool sipVH_pyqtpvwidgets_32(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *);

    return sipVH_pyqtpvwidgets_32(sipGILState, sipImportedVirtErrorHandlers_pyqtpvwidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth);
}

bool sipQMComboBox::focusNextPrevChild(bool a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[4],sipPySelf,SIP_NULLPTR,sipName_focusNextPrevChild);

    if (!sipMeth)
        return  ::QMComboBox::focusNextPrevChild(a0);

    extern bool sipVH_pyqtpvwidgets_31(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, bool);

    return sipVH_pyqtpvwidgets_31(sipGILState, sipImportedVirtErrorHandlers_pyqtpvwidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

 ::QVariant sipQMComboBox::inputMethodQuery( ::Qt::InputMethodQuery a0) const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[5]),sipPySelf,SIP_NULLPTR,sipName_inputMethodQuery);

    if (!sipMeth)
        return  ::QMComboBox::inputMethodQuery(a0);

    extern  ::QVariant sipVH_pyqtpvwidgets_30(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::Qt::InputMethodQuery);

    return sipVH_pyqtpvwidgets_30(sipGILState, sipImportedVirtErrorHandlers_pyqtpvwidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQMComboBox::inputMethodEvent( ::QInputMethodEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[6],sipPySelf,SIP_NULLPTR,sipName_inputMethodEvent);

    if (!sipMeth)
    {
         ::QMComboBox::inputMethodEvent(a0);
        return;
    }

    extern void sipVH_pyqtpvwidgets_29(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QInputMethodEvent*);

    sipVH_pyqtpvwidgets_29(sipGILState, sipImportedVirtErrorHandlers_pyqtpvwidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQMComboBox::changeEvent( ::QEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[7],sipPySelf,SIP_NULLPTR,sipName_changeEvent);

    if (!sipMeth)
    {
         ::QMComboBox::changeEvent(a0);
        return;
    }

    extern void sipVH_pyqtpvwidgets_1(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QEvent*);

    sipVH_pyqtpvwidgets_1(sipGILState, sipImportedVirtErrorHandlers_pyqtpvwidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQMComboBox::hideEvent( ::QHideEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[8],sipPySelf,SIP_NULLPTR,sipName_hideEvent);

    if (!sipMeth)
    {
         ::QMComboBox::hideEvent(a0);
        return;
    }

    extern void sipVH_pyqtpvwidgets_28(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QHideEvent*);

    sipVH_pyqtpvwidgets_28(sipGILState, sipImportedVirtErrorHandlers_pyqtpvwidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQMComboBox::showEvent( ::QShowEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[9],sipPySelf,SIP_NULLPTR,sipName_showEvent);

    if (!sipMeth)
    {
         ::QMComboBox::showEvent(a0);
        return;
    }

    extern void sipVH_pyqtpvwidgets_27(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QShowEvent*);

    sipVH_pyqtpvwidgets_27(sipGILState, sipImportedVirtErrorHandlers_pyqtpvwidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQMComboBox::dropEvent( ::QDropEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[10],sipPySelf,SIP_NULLPTR,sipName_dropEvent);

    if (!sipMeth)
    {
         ::QMComboBox::dropEvent(a0);
        return;
    }

    extern void sipVH_pyqtpvwidgets_26(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QDropEvent*);

    sipVH_pyqtpvwidgets_26(sipGILState, sipImportedVirtErrorHandlers_pyqtpvwidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQMComboBox::dragLeaveEvent( ::QDragLeaveEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[11],sipPySelf,SIP_NULLPTR,sipName_dragLeaveEvent);

    if (!sipMeth)
    {
         ::QMComboBox::dragLeaveEvent(a0);
        return;
    }

    extern void sipVH_pyqtpvwidgets_25(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QDragLeaveEvent*);

    sipVH_pyqtpvwidgets_25(sipGILState, sipImportedVirtErrorHandlers_pyqtpvwidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQMComboBox::dragMoveEvent( ::QDragMoveEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[12],sipPySelf,SIP_NULLPTR,sipName_dragMoveEvent);

    if (!sipMeth)
    {
         ::QMComboBox::dragMoveEvent(a0);
        return;
    }

    extern void sipVH_pyqtpvwidgets_24(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QDragMoveEvent*);

    sipVH_pyqtpvwidgets_24(sipGILState, sipImportedVirtErrorHandlers_pyqtpvwidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQMComboBox::dragEnterEvent( ::QDragEnterEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[13],sipPySelf,SIP_NULLPTR,sipName_dragEnterEvent);

    if (!sipMeth)
    {
         ::QMComboBox::dragEnterEvent(a0);
        return;
    }

    extern void sipVH_pyqtpvwidgets_23(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QDragEnterEvent*);

    sipVH_pyqtpvwidgets_23(sipGILState, sipImportedVirtErrorHandlers_pyqtpvwidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQMComboBox::actionEvent( ::QActionEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[14],sipPySelf,SIP_NULLPTR,sipName_actionEvent);

    if (!sipMeth)
    {
         ::QMComboBox::actionEvent(a0);
        return;
    }

    extern void sipVH_pyqtpvwidgets_22(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QActionEvent*);

    sipVH_pyqtpvwidgets_22(sipGILState, sipImportedVirtErrorHandlers_pyqtpvwidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQMComboBox::tabletEvent( ::QTabletEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[15],sipPySelf,SIP_NULLPTR,sipName_tabletEvent);

    if (!sipMeth)
    {
         ::QMComboBox::tabletEvent(a0);
        return;
    }

    extern void sipVH_pyqtpvwidgets_21(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QTabletEvent*);

    sipVH_pyqtpvwidgets_21(sipGILState, sipImportedVirtErrorHandlers_pyqtpvwidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQMComboBox::contextMenuEvent( ::QContextMenuEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[16],sipPySelf,SIP_NULLPTR,sipName_contextMenuEvent);

    if (!sipMeth)
    {
         ::QMComboBox::contextMenuEvent(a0);
        return;
    }

    extern void sipVH_pyqtpvwidgets_20(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QContextMenuEvent*);

    sipVH_pyqtpvwidgets_20(sipGILState, sipImportedVirtErrorHandlers_pyqtpvwidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQMComboBox::closeEvent( ::QCloseEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[17],sipPySelf,SIP_NULLPTR,sipName_closeEvent);

    if (!sipMeth)
    {
         ::QMComboBox::closeEvent(a0);
        return;
    }

    extern void sipVH_pyqtpvwidgets_19(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QCloseEvent*);

    sipVH_pyqtpvwidgets_19(sipGILState, sipImportedVirtErrorHandlers_pyqtpvwidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQMComboBox::resizeEvent( ::QResizeEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[18],sipPySelf,SIP_NULLPTR,sipName_resizeEvent);

    if (!sipMeth)
    {
         ::QMComboBox::resizeEvent(a0);
        return;
    }

    extern void sipVH_pyqtpvwidgets_18(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QResizeEvent*);

    sipVH_pyqtpvwidgets_18(sipGILState, sipImportedVirtErrorHandlers_pyqtpvwidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQMComboBox::moveEvent( ::QMoveEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[19],sipPySelf,SIP_NULLPTR,sipName_moveEvent);

    if (!sipMeth)
    {
         ::QMComboBox::moveEvent(a0);
        return;
    }

    extern void sipVH_pyqtpvwidgets_17(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QMoveEvent*);

    sipVH_pyqtpvwidgets_17(sipGILState, sipImportedVirtErrorHandlers_pyqtpvwidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQMComboBox::paintEvent( ::QPaintEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[20],sipPySelf,SIP_NULLPTR,sipName_paintEvent);

    if (!sipMeth)
    {
         ::QMComboBox::paintEvent(a0);
        return;
    }

    extern void sipVH_pyqtpvwidgets_16(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QPaintEvent*);

    sipVH_pyqtpvwidgets_16(sipGILState, sipImportedVirtErrorHandlers_pyqtpvwidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQMComboBox::leaveEvent( ::QEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[21],sipPySelf,SIP_NULLPTR,sipName_leaveEvent);

    if (!sipMeth)
    {
         ::QMComboBox::leaveEvent(a0);
        return;
    }

    extern void sipVH_pyqtpvwidgets_1(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QEvent*);

    sipVH_pyqtpvwidgets_1(sipGILState, sipImportedVirtErrorHandlers_pyqtpvwidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQMComboBox::enterEvent( ::QEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[22],sipPySelf,SIP_NULLPTR,sipName_enterEvent);

    if (!sipMeth)
    {
         ::QMComboBox::enterEvent(a0);
        return;
    }

    extern void sipVH_pyqtpvwidgets_1(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QEvent*);

    sipVH_pyqtpvwidgets_1(sipGILState, sipImportedVirtErrorHandlers_pyqtpvwidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQMComboBox::keyReleaseEvent( ::QKeyEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[23],sipPySelf,SIP_NULLPTR,sipName_keyReleaseEvent);

    if (!sipMeth)
    {
         ::QMComboBox::keyReleaseEvent(a0);
        return;
    }

    extern void sipVH_pyqtpvwidgets_14(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QKeyEvent*);

    sipVH_pyqtpvwidgets_14(sipGILState, sipImportedVirtErrorHandlers_pyqtpvwidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQMComboBox::wheelEvent( ::QWheelEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[24],sipPySelf,SIP_NULLPTR,sipName_wheelEvent);

    if (!sipMeth)
    {
         ::QMComboBox::wheelEvent(a0);
        return;
    }

    extern void sipVH_pyqtpvwidgets_13(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QWheelEvent*);

    sipVH_pyqtpvwidgets_13(sipGILState, sipImportedVirtErrorHandlers_pyqtpvwidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQMComboBox::mouseMoveEvent( ::QMouseEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[25],sipPySelf,SIP_NULLPTR,sipName_mouseMoveEvent);

    if (!sipMeth)
    {
         ::QMComboBox::mouseMoveEvent(a0);
        return;
    }

    extern void sipVH_pyqtpvwidgets_12(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QMouseEvent*);

    sipVH_pyqtpvwidgets_12(sipGILState, sipImportedVirtErrorHandlers_pyqtpvwidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQMComboBox::mouseDoubleClickEvent( ::QMouseEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[26],sipPySelf,SIP_NULLPTR,sipName_mouseDoubleClickEvent);

    if (!sipMeth)
    {
         ::QMComboBox::mouseDoubleClickEvent(a0);
        return;
    }

    extern void sipVH_pyqtpvwidgets_12(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QMouseEvent*);

    sipVH_pyqtpvwidgets_12(sipGILState, sipImportedVirtErrorHandlers_pyqtpvwidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQMComboBox::mouseReleaseEvent( ::QMouseEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[27],sipPySelf,SIP_NULLPTR,sipName_mouseReleaseEvent);

    if (!sipMeth)
    {
         ::QMComboBox::mouseReleaseEvent(a0);
        return;
    }

    extern void sipVH_pyqtpvwidgets_12(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QMouseEvent*);

    sipVH_pyqtpvwidgets_12(sipGILState, sipImportedVirtErrorHandlers_pyqtpvwidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQMComboBox::mousePressEvent( ::QMouseEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[28],sipPySelf,SIP_NULLPTR,sipName_mousePressEvent);

    if (!sipMeth)
    {
         ::QMComboBox::mousePressEvent(a0);
        return;
    }

    extern void sipVH_pyqtpvwidgets_12(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QMouseEvent*);

    sipVH_pyqtpvwidgets_12(sipGILState, sipImportedVirtErrorHandlers_pyqtpvwidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

int sipQMComboBox::heightForWidth(int a0) const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[29]),sipPySelf,SIP_NULLPTR,sipName_heightForWidth);

    if (!sipMeth)
        return  ::QMComboBox::heightForWidth(a0);

    extern int sipVH_pyqtpvwidgets_11(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, int);

    return sipVH_pyqtpvwidgets_11(sipGILState, sipImportedVirtErrorHandlers_pyqtpvwidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

 ::QSize sipQMComboBox::minimumSizeHint() const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[30]),sipPySelf,SIP_NULLPTR,sipName_minimumSizeHint);

    if (!sipMeth)
        return  ::QMComboBox::minimumSizeHint();

    extern  ::QSize sipVH_pyqtpvwidgets_10(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *);

    return sipVH_pyqtpvwidgets_10(sipGILState, sipImportedVirtErrorHandlers_pyqtpvwidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth);
}

 ::QSize sipQMComboBox::sizeHint() const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[31]),sipPySelf,SIP_NULLPTR,sipName_sizeHint);

    if (!sipMeth)
        return  ::QMComboBox::sizeHint();

    extern  ::QSize sipVH_pyqtpvwidgets_10(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *);

    return sipVH_pyqtpvwidgets_10(sipGILState, sipImportedVirtErrorHandlers_pyqtpvwidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth);
}

void sipQMComboBox::setVisible(bool a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[32],sipPySelf,SIP_NULLPTR,sipName_setVisible);

    if (!sipMeth)
    {
         ::QMComboBox::setVisible(a0);
        return;
    }

    extern void sipVH_pyqtpvwidgets_9(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, bool);

    sipVH_pyqtpvwidgets_9(sipGILState, sipImportedVirtErrorHandlers_pyqtpvwidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

int sipQMComboBox::devType() const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[33]),sipPySelf,SIP_NULLPTR,sipName_devType);

    if (!sipMeth)
        return  ::QMComboBox::devType();

    extern int sipVH_pyqtpvwidgets_8(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *);

    return sipVH_pyqtpvwidgets_8(sipGILState, sipImportedVirtErrorHandlers_pyqtpvwidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth);
}

 ::QPaintEngine* sipQMComboBox::paintEngine() const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[34]),sipPySelf,SIP_NULLPTR,sipName_paintEngine);

    if (!sipMeth)
        return  ::QMComboBox::paintEngine();

    extern  ::QPaintEngine* sipVH_pyqtpvwidgets_7(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *);

    return sipVH_pyqtpvwidgets_7(sipGILState, sipImportedVirtErrorHandlers_pyqtpvwidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth);
}

int sipQMComboBox::metric( ::QPaintDevice::PaintDeviceMetric a0) const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[35]),sipPySelf,SIP_NULLPTR,sipName_metric);

    if (!sipMeth)
        return  ::QMComboBox::metric(a0);

    extern int sipVH_pyqtpvwidgets_6(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QPaintDevice::PaintDeviceMetric);

    return sipVH_pyqtpvwidgets_6(sipGILState, sipImportedVirtErrorHandlers_pyqtpvwidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

bool sipQMComboBox::event( ::QEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[36],sipPySelf,SIP_NULLPTR,sipName_event);

    if (!sipMeth)
        return  ::QMComboBox::event(a0);

    extern bool sipVH_pyqtpvwidgets_5(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QEvent*);

    return sipVH_pyqtpvwidgets_5(sipGILState, sipImportedVirtErrorHandlers_pyqtpvwidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

bool sipQMComboBox::eventFilter( ::QObject*a0, ::QEvent*a1)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[37],sipPySelf,SIP_NULLPTR,sipName_eventFilter);

    if (!sipMeth)
        return  ::QMComboBox::eventFilter(a0,a1);

    extern bool sipVH_pyqtpvwidgets_4(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QObject*, ::QEvent*);

    return sipVH_pyqtpvwidgets_4(sipGILState, sipImportedVirtErrorHandlers_pyqtpvwidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0, a1);
}

void sipQMComboBox::timerEvent( ::QTimerEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[38],sipPySelf,SIP_NULLPTR,sipName_timerEvent);

    if (!sipMeth)
    {
         ::QMComboBox::timerEvent(a0);
        return;
    }

    extern void sipVH_pyqtpvwidgets_3(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QTimerEvent*);

    sipVH_pyqtpvwidgets_3(sipGILState, sipImportedVirtErrorHandlers_pyqtpvwidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQMComboBox::childEvent( ::QChildEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[39],sipPySelf,SIP_NULLPTR,sipName_childEvent);

    if (!sipMeth)
    {
         ::QMComboBox::childEvent(a0);
        return;
    }

    extern void sipVH_pyqtpvwidgets_2(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QChildEvent*);

    sipVH_pyqtpvwidgets_2(sipGILState, sipImportedVirtErrorHandlers_pyqtpvwidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQMComboBox::customEvent( ::QEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[40],sipPySelf,SIP_NULLPTR,sipName_customEvent);

    if (!sipMeth)
    {
         ::QMComboBox::customEvent(a0);
        return;
    }

    extern void sipVH_pyqtpvwidgets_1(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QEvent*);

    sipVH_pyqtpvwidgets_1(sipGILState, sipImportedVirtErrorHandlers_pyqtpvwidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQMComboBox::connectNotify(const  ::QMetaMethod& a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[41],sipPySelf,SIP_NULLPTR,sipName_connectNotify);

    if (!sipMeth)
    {
         ::QMComboBox::connectNotify(a0);
        return;
    }

    extern void sipVH_pyqtpvwidgets_0(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, const  ::QMetaMethod&);

    sipVH_pyqtpvwidgets_0(sipGILState, sipImportedVirtErrorHandlers_pyqtpvwidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQMComboBox::disconnectNotify(const  ::QMetaMethod& a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[42],sipPySelf,SIP_NULLPTR,sipName_disconnectNotify);

    if (!sipMeth)
    {
         ::QMComboBox::disconnectNotify(a0);
        return;
    }

    extern void sipVH_pyqtpvwidgets_0(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, const  ::QMetaMethod&);

    sipVH_pyqtpvwidgets_0(sipGILState, sipImportedVirtErrorHandlers_pyqtpvwidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQMComboBox::showPopup()
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[43],sipPySelf,SIP_NULLPTR,sipName_showPopup);

    if (!sipMeth)
    {
         ::QMComboBox::showPopup();
        return;
    }

    extern void sipVH_pyqtpvwidgets_41(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *);

    sipVH_pyqtpvwidgets_41(sipGILState, sipImportedVirtErrorHandlers_pyqtpvwidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth);
}

void sipQMComboBox::hidePopup()
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[44],sipPySelf,SIP_NULLPTR,sipName_hidePopup);

    if (!sipMeth)
    {
         ::QMComboBox::hidePopup();
        return;
    }

    extern void sipVH_pyqtpvwidgets_41(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *);

    sipVH_pyqtpvwidgets_41(sipGILState, sipImportedVirtErrorHandlers_pyqtpvwidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth);
}

 ::QObject* sipQMComboBox::sipProtect_sender() const
{
    return  ::QObject::sender();
}

int sipQMComboBox::sipProtect_receivers(const char*a0) const
{
    return  ::QObject::receivers(a0);
}

void sipQMComboBox::sipProtectVirt_timerEvent(bool sipSelfWasArg, ::QTimerEvent*a0)
{
    (sipSelfWasArg ?  ::QObject::timerEvent(a0) : timerEvent(a0));
}

void sipQMComboBox::sipProtectVirt_childEvent(bool sipSelfWasArg, ::QChildEvent*a0)
{
    (sipSelfWasArg ?  ::QObject::childEvent(a0) : childEvent(a0));
}

void sipQMComboBox::sipProtectVirt_customEvent(bool sipSelfWasArg, ::QEvent*a0)
{
    (sipSelfWasArg ?  ::QObject::customEvent(a0) : customEvent(a0));
}

void sipQMComboBox::sipProtectVirt_connectNotify(bool sipSelfWasArg,const  ::QMetaMethod& a0)
{
    (sipSelfWasArg ?  ::QObject::connectNotify(a0) : connectNotify(a0));
}

void sipQMComboBox::sipProtectVirt_disconnectNotify(bool sipSelfWasArg,const  ::QMetaMethod& a0)
{
    (sipSelfWasArg ?  ::QObject::disconnectNotify(a0) : disconnectNotify(a0));
}

int sipQMComboBox::sipProtect_senderSignalIndex() const
{
    return  ::QObject::senderSignalIndex();
}

bool sipQMComboBox::sipProtect_isSignalConnected(const  ::QMetaMethod& a0) const
{
    return  ::QObject::isSignalConnected(a0);
}

void sipQMComboBox::sipProtectVirt_mouseDoubleClickEvent(bool sipSelfWasArg, ::QMouseEvent*a0)
{
    (sipSelfWasArg ?  ::QWidget::mouseDoubleClickEvent(a0) : mouseDoubleClickEvent(a0));
}

void sipQMComboBox::sipProtectVirt_mouseMoveEvent(bool sipSelfWasArg, ::QMouseEvent*a0)
{
    (sipSelfWasArg ?  ::QWidget::mouseMoveEvent(a0) : mouseMoveEvent(a0));
}

void sipQMComboBox::sipProtectVirt_enterEvent(bool sipSelfWasArg, ::QEvent*a0)
{
    (sipSelfWasArg ?  ::QWidget::enterEvent(a0) : enterEvent(a0));
}

void sipQMComboBox::sipProtectVirt_leaveEvent(bool sipSelfWasArg, ::QEvent*a0)
{
    (sipSelfWasArg ?  ::QWidget::leaveEvent(a0) : leaveEvent(a0));
}

void sipQMComboBox::sipProtectVirt_moveEvent(bool sipSelfWasArg, ::QMoveEvent*a0)
{
    (sipSelfWasArg ?  ::QWidget::moveEvent(a0) : moveEvent(a0));
}

void sipQMComboBox::sipProtectVirt_closeEvent(bool sipSelfWasArg, ::QCloseEvent*a0)
{
    (sipSelfWasArg ?  ::QWidget::closeEvent(a0) : closeEvent(a0));
}

void sipQMComboBox::sipProtectVirt_tabletEvent(bool sipSelfWasArg, ::QTabletEvent*a0)
{
    (sipSelfWasArg ?  ::QWidget::tabletEvent(a0) : tabletEvent(a0));
}

void sipQMComboBox::sipProtectVirt_actionEvent(bool sipSelfWasArg, ::QActionEvent*a0)
{
    (sipSelfWasArg ?  ::QWidget::actionEvent(a0) : actionEvent(a0));
}

void sipQMComboBox::sipProtectVirt_dragEnterEvent(bool sipSelfWasArg, ::QDragEnterEvent*a0)
{
    (sipSelfWasArg ?  ::QWidget::dragEnterEvent(a0) : dragEnterEvent(a0));
}

void sipQMComboBox::sipProtectVirt_dragMoveEvent(bool sipSelfWasArg, ::QDragMoveEvent*a0)
{
    (sipSelfWasArg ?  ::QWidget::dragMoveEvent(a0) : dragMoveEvent(a0));
}

void sipQMComboBox::sipProtectVirt_dragLeaveEvent(bool sipSelfWasArg, ::QDragLeaveEvent*a0)
{
    (sipSelfWasArg ?  ::QWidget::dragLeaveEvent(a0) : dragLeaveEvent(a0));
}

void sipQMComboBox::sipProtectVirt_dropEvent(bool sipSelfWasArg, ::QDropEvent*a0)
{
    (sipSelfWasArg ?  ::QWidget::dropEvent(a0) : dropEvent(a0));
}

int sipQMComboBox::sipProtectVirt_metric(bool sipSelfWasArg, ::QPaintDevice::PaintDeviceMetric a0) const
{
    return (sipSelfWasArg ?  ::QWidget::metric(a0) : metric(a0));
}

void sipQMComboBox::sipProtect_updateMicroFocus()
{
     ::QWidget::updateMicroFocus();
}

void sipQMComboBox::sipProtect_create( ::WId a0,bool a1,bool a2)
{
     ::QWidget::create(a0,a1,a2);
}

void sipQMComboBox::sipProtect_destroy(bool a0,bool a1)
{
     ::QWidget::destroy(a0,a1);
}

bool sipQMComboBox::sipProtectVirt_focusNextPrevChild(bool sipSelfWasArg,bool a0)
{
    return (sipSelfWasArg ?  ::QWidget::focusNextPrevChild(a0) : focusNextPrevChild(a0));
}

bool sipQMComboBox::sipProtect_focusNextChild()
{
    return  ::QWidget::focusNextChild();
}

bool sipQMComboBox::sipProtect_focusPreviousChild()
{
    return  ::QWidget::focusPreviousChild();
}

bool sipQMComboBox::sipProtectVirt_nativeEvent(bool sipSelfWasArg,const  ::QByteArray& a0,void*a1,long*a2)
{
    return (sipSelfWasArg ?  ::QWidget::nativeEvent(a0,a1,a2) : nativeEvent(a0,a1,a2));
}

 ::QPainter* sipQMComboBox::sipProtectVirt_sharedPainter(bool sipSelfWasArg) const
{
    return (sipSelfWasArg ?  ::QWidget::sharedPainter() : sharedPainter());
}

void sipQMComboBox::sipProtectVirt_initPainter(bool sipSelfWasArg, ::QPainter*a0) const
{
    (sipSelfWasArg ?  ::QWidget::initPainter(a0) : initPainter(a0));
}

void sipQMComboBox::sipProtect_initStyleOption( ::QStyleOptionComboBox*a0) const
{
     ::QComboBox::initStyleOption(a0);
}

void sipQMComboBox::sipProtectVirt_changeEvent(bool sipSelfWasArg, ::QEvent*a0)
{
    (sipSelfWasArg ?  ::QComboBox::changeEvent(a0) : changeEvent(a0));
}

void sipQMComboBox::sipProtectVirt_resizeEvent(bool sipSelfWasArg, ::QResizeEvent*a0)
{
    (sipSelfWasArg ?  ::QComboBox::resizeEvent(a0) : resizeEvent(a0));
}

void sipQMComboBox::sipProtectVirt_paintEvent(bool sipSelfWasArg, ::QPaintEvent*a0)
{
    (sipSelfWasArg ?  ::QComboBox::paintEvent(a0) : paintEvent(a0));
}

void sipQMComboBox::sipProtectVirt_showEvent(bool sipSelfWasArg, ::QShowEvent*a0)
{
    (sipSelfWasArg ?  ::QComboBox::showEvent(a0) : showEvent(a0));
}

void sipQMComboBox::sipProtectVirt_hideEvent(bool sipSelfWasArg, ::QHideEvent*a0)
{
    (sipSelfWasArg ?  ::QComboBox::hideEvent(a0) : hideEvent(a0));
}

void sipQMComboBox::sipProtectVirt_mousePressEvent(bool sipSelfWasArg, ::QMouseEvent*a0)
{
    (sipSelfWasArg ?  ::QComboBox::mousePressEvent(a0) : mousePressEvent(a0));
}

void sipQMComboBox::sipProtectVirt_mouseReleaseEvent(bool sipSelfWasArg, ::QMouseEvent*a0)
{
    (sipSelfWasArg ?  ::QComboBox::mouseReleaseEvent(a0) : mouseReleaseEvent(a0));
}

void sipQMComboBox::sipProtectVirt_keyReleaseEvent(bool sipSelfWasArg, ::QKeyEvent*a0)
{
    (sipSelfWasArg ?  ::QComboBox::keyReleaseEvent(a0) : keyReleaseEvent(a0));
}

void sipQMComboBox::sipProtectVirt_wheelEvent(bool sipSelfWasArg, ::QWheelEvent*a0)
{
    (sipSelfWasArg ?  ::QComboBox::wheelEvent(a0) : wheelEvent(a0));
}

void sipQMComboBox::sipProtectVirt_contextMenuEvent(bool sipSelfWasArg, ::QContextMenuEvent*a0)
{
    (sipSelfWasArg ?  ::QComboBox::contextMenuEvent(a0) : contextMenuEvent(a0));
}

void sipQMComboBox::sipProtectVirt_inputMethodEvent(bool sipSelfWasArg, ::QInputMethodEvent*a0)
{
    (sipSelfWasArg ?  ::QComboBox::inputMethodEvent(a0) : inputMethodEvent(a0));
}


extern "C" {static PyObject *meth_QMComboBox_sender(PyObject *, PyObject *);}
static PyObject *meth_QMComboBox_sender(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const sipQMComboBox *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QMComboBox, &sipCpp))
        {
             ::QObject*sipRes = 0;

#line 560 "/usr/share/sip/PyQt5/QtCore/qobject.sip"
        // sender() must be called without the GIL to avoid possible deadlocks between
        // the GIL and Qt's internal thread data mutex.
        
        Py_BEGIN_ALLOW_THREADS
        
        #if defined(SIP_PROTECTED_IS_PUBLIC)
        sipRes = sipCpp->sender();
        #else
        sipRes = sipCpp->sipProtect_sender();
        #endif
        
        Py_END_ALLOW_THREADS
        
        if (!sipRes)
        {
            typedef QObject *(*qtcore_qobject_sender_t)();
        
            static qtcore_qobject_sender_t qtcore_qobject_sender = 0;
        
            if (!qtcore_qobject_sender)
            {
                qtcore_qobject_sender = (qtcore_qobject_sender_t)sipImportSymbol("qtcore_qobject_sender");
                Q_ASSERT(qtcore_qobject_sender);
            }
        
            sipRes = qtcore_qobject_sender();
        }
#line 1431 "./sippyqtpvwidgetsQMComboBox.cpp"

            return sipConvertFromType(sipRes,sipType_QObject,SIP_NULLPTR);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QMComboBox, sipName_sender, SIP_NULLPTR);

    return SIP_NULLPTR;
}


extern "C" {static PyObject *meth_QMComboBox_receivers(PyObject *, PyObject *);}
static PyObject *meth_QMComboBox_receivers(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        PyObject * a0;
        const sipQMComboBox *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BP0", &sipSelf, sipType_QMComboBox, &sipCpp, &a0))
        {
            int sipRes = 0;
            sipErrorState sipError = sipErrorNone;

#line 591 "/usr/share/sip/PyQt5/QtCore/qobject.sip"
        // We need to handle the signal object.  Import the helper if it hasn't already
        // been done.
        typedef sipErrorState (*pyqt5_get_signal_signature_t)(PyObject *, const QObject *, const QByteArray &);
        
        static pyqt5_get_signal_signature_t pyqt5_get_signal_signature = 0;
        
        if (!pyqt5_get_signal_signature)
        {
            pyqt5_get_signal_signature = (pyqt5_get_signal_signature_t)sipImportSymbol("pyqt5_get_signal_signature");
            Q_ASSERT(pyqt5_get_signal_signature);
        }
        
        QByteArray signal_signature;
            
        #if defined(SIP_PROTECTED_IS_PUBLIC)
        if ((sipError = pyqt5_get_signal_signature(a0, sipCpp, signal_signature)) == sipErrorNone)
        {
            sipRes = sipCpp->receivers(signal_signature.constData());
        }
        #else
        if ((sipError = pyqt5_get_signal_signature(a0, static_cast<const QObject *>(sipCpp), signal_signature)) == sipErrorNone)
        {
            sipRes = sipCpp->sipProtect_receivers(signal_signature.constData());
        }
        #endif
        else if (sipError == sipErrorContinue)
        {
            sipError = sipBadCallableArg(0, a0);
        }
#line 1488 "./sippyqtpvwidgetsQMComboBox.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            return SIPLong_FromLong(sipRes);
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QMComboBox, sipName_receivers, SIP_NULLPTR);

    return SIP_NULLPTR;
}


extern "C" {static PyObject *meth_QMComboBox_timerEvent(PyObject *, PyObject *);}
static PyObject *meth_QMComboBox_timerEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::QTimerEvent* a0;
        sipQMComboBox *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ8", &sipSelf, sipType_QMComboBox, &sipCpp, sipType_QTimerEvent, &a0))
        {
            sipCpp->sipProtectVirt_timerEvent(sipSelfWasArg,a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QMComboBox, sipName_timerEvent, SIP_NULLPTR);

    return SIP_NULLPTR;
}


extern "C" {static PyObject *meth_QMComboBox_childEvent(PyObject *, PyObject *);}
static PyObject *meth_QMComboBox_childEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::QChildEvent* a0;
        sipQMComboBox *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ8", &sipSelf, sipType_QMComboBox, &sipCpp, sipType_QChildEvent, &a0))
        {
            sipCpp->sipProtectVirt_childEvent(sipSelfWasArg,a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QMComboBox, sipName_childEvent, SIP_NULLPTR);

    return SIP_NULLPTR;
}


extern "C" {static PyObject *meth_QMComboBox_customEvent(PyObject *, PyObject *);}
static PyObject *meth_QMComboBox_customEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::QEvent* a0;
        sipQMComboBox *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ8", &sipSelf, sipType_QMComboBox, &sipCpp, sipType_QEvent, &a0))
        {
            sipCpp->sipProtectVirt_customEvent(sipSelfWasArg,a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QMComboBox, sipName_customEvent, SIP_NULLPTR);

    return SIP_NULLPTR;
}


extern "C" {static PyObject *meth_QMComboBox_connectNotify(PyObject *, PyObject *);}
static PyObject *meth_QMComboBox_connectNotify(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
        const  ::QMetaMethod* a0;
        sipQMComboBox *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ9", &sipSelf, sipType_QMComboBox, &sipCpp, sipType_QMetaMethod, &a0))
        {
            sipCpp->sipProtectVirt_connectNotify(sipSelfWasArg,*a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QMComboBox, sipName_connectNotify, SIP_NULLPTR);

    return SIP_NULLPTR;
}


extern "C" {static PyObject *meth_QMComboBox_disconnectNotify(PyObject *, PyObject *);}
static PyObject *meth_QMComboBox_disconnectNotify(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
        const  ::QMetaMethod* a0;
        sipQMComboBox *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ9", &sipSelf, sipType_QMComboBox, &sipCpp, sipType_QMetaMethod, &a0))
        {
            sipCpp->sipProtectVirt_disconnectNotify(sipSelfWasArg,*a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QMComboBox, sipName_disconnectNotify, SIP_NULLPTR);

    return SIP_NULLPTR;
}


extern "C" {static PyObject *meth_QMComboBox_senderSignalIndex(PyObject *, PyObject *);}
static PyObject *meth_QMComboBox_senderSignalIndex(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const sipQMComboBox *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QMComboBox, &sipCpp))
        {
            int sipRes;

            sipRes = sipCpp->sipProtect_senderSignalIndex();

            return SIPLong_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QMComboBox, sipName_senderSignalIndex, SIP_NULLPTR);

    return SIP_NULLPTR;
}


extern "C" {static PyObject *meth_QMComboBox_isSignalConnected(PyObject *, PyObject *);}
static PyObject *meth_QMComboBox_isSignalConnected(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QMetaMethod* a0;
        const sipQMComboBox *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ9", &sipSelf, sipType_QMComboBox, &sipCpp, sipType_QMetaMethod, &a0))
        {
            bool sipRes;

            sipRes = sipCpp->sipProtect_isSignalConnected(*a0);

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QMComboBox, sipName_isSignalConnected, SIP_NULLPTR);

    return SIP_NULLPTR;
}


extern "C" {static PyObject *meth_QMComboBox_mouseDoubleClickEvent(PyObject *, PyObject *);}
static PyObject *meth_QMComboBox_mouseDoubleClickEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::QMouseEvent* a0;
        sipQMComboBox *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ8", &sipSelf, sipType_QMComboBox, &sipCpp, sipType_QMouseEvent, &a0))
        {
            sipCpp->sipProtectVirt_mouseDoubleClickEvent(sipSelfWasArg,a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QMComboBox, sipName_mouseDoubleClickEvent, SIP_NULLPTR);

    return SIP_NULLPTR;
}


extern "C" {static PyObject *meth_QMComboBox_mouseMoveEvent(PyObject *, PyObject *);}
static PyObject *meth_QMComboBox_mouseMoveEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::QMouseEvent* a0;
        sipQMComboBox *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ8", &sipSelf, sipType_QMComboBox, &sipCpp, sipType_QMouseEvent, &a0))
        {
            sipCpp->sipProtectVirt_mouseMoveEvent(sipSelfWasArg,a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QMComboBox, sipName_mouseMoveEvent, SIP_NULLPTR);

    return SIP_NULLPTR;
}


extern "C" {static PyObject *meth_QMComboBox_enterEvent(PyObject *, PyObject *);}
static PyObject *meth_QMComboBox_enterEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::QEvent* a0;
        sipQMComboBox *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ8", &sipSelf, sipType_QMComboBox, &sipCpp, sipType_QEvent, &a0))
        {
            sipCpp->sipProtectVirt_enterEvent(sipSelfWasArg,a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QMComboBox, sipName_enterEvent, SIP_NULLPTR);

    return SIP_NULLPTR;
}


extern "C" {static PyObject *meth_QMComboBox_leaveEvent(PyObject *, PyObject *);}
static PyObject *meth_QMComboBox_leaveEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::QEvent* a0;
        sipQMComboBox *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ8", &sipSelf, sipType_QMComboBox, &sipCpp, sipType_QEvent, &a0))
        {
            sipCpp->sipProtectVirt_leaveEvent(sipSelfWasArg,a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QMComboBox, sipName_leaveEvent, SIP_NULLPTR);

    return SIP_NULLPTR;
}


extern "C" {static PyObject *meth_QMComboBox_moveEvent(PyObject *, PyObject *);}
static PyObject *meth_QMComboBox_moveEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::QMoveEvent* a0;
        sipQMComboBox *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ8", &sipSelf, sipType_QMComboBox, &sipCpp, sipType_QMoveEvent, &a0))
        {
            sipCpp->sipProtectVirt_moveEvent(sipSelfWasArg,a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QMComboBox, sipName_moveEvent, SIP_NULLPTR);

    return SIP_NULLPTR;
}


extern "C" {static PyObject *meth_QMComboBox_closeEvent(PyObject *, PyObject *);}
static PyObject *meth_QMComboBox_closeEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::QCloseEvent* a0;
        sipQMComboBox *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ8", &sipSelf, sipType_QMComboBox, &sipCpp, sipType_QCloseEvent, &a0))
        {
            sipCpp->sipProtectVirt_closeEvent(sipSelfWasArg,a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QMComboBox, sipName_closeEvent, SIP_NULLPTR);

    return SIP_NULLPTR;
}


extern "C" {static PyObject *meth_QMComboBox_tabletEvent(PyObject *, PyObject *);}
static PyObject *meth_QMComboBox_tabletEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::QTabletEvent* a0;
        sipQMComboBox *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ8", &sipSelf, sipType_QMComboBox, &sipCpp, sipType_QTabletEvent, &a0))
        {
            sipCpp->sipProtectVirt_tabletEvent(sipSelfWasArg,a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QMComboBox, sipName_tabletEvent, SIP_NULLPTR);

    return SIP_NULLPTR;
}


extern "C" {static PyObject *meth_QMComboBox_actionEvent(PyObject *, PyObject *);}
static PyObject *meth_QMComboBox_actionEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::QActionEvent* a0;
        sipQMComboBox *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ8", &sipSelf, sipType_QMComboBox, &sipCpp, sipType_QActionEvent, &a0))
        {
            sipCpp->sipProtectVirt_actionEvent(sipSelfWasArg,a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QMComboBox, sipName_actionEvent, SIP_NULLPTR);

    return SIP_NULLPTR;
}


extern "C" {static PyObject *meth_QMComboBox_dragEnterEvent(PyObject *, PyObject *);}
static PyObject *meth_QMComboBox_dragEnterEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::QDragEnterEvent* a0;
        sipQMComboBox *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ8", &sipSelf, sipType_QMComboBox, &sipCpp, sipType_QDragEnterEvent, &a0))
        {
            sipCpp->sipProtectVirt_dragEnterEvent(sipSelfWasArg,a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QMComboBox, sipName_dragEnterEvent, SIP_NULLPTR);

    return SIP_NULLPTR;
}


extern "C" {static PyObject *meth_QMComboBox_dragMoveEvent(PyObject *, PyObject *);}
static PyObject *meth_QMComboBox_dragMoveEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::QDragMoveEvent* a0;
        sipQMComboBox *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ8", &sipSelf, sipType_QMComboBox, &sipCpp, sipType_QDragMoveEvent, &a0))
        {
            sipCpp->sipProtectVirt_dragMoveEvent(sipSelfWasArg,a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QMComboBox, sipName_dragMoveEvent, SIP_NULLPTR);

    return SIP_NULLPTR;
}


extern "C" {static PyObject *meth_QMComboBox_dragLeaveEvent(PyObject *, PyObject *);}
static PyObject *meth_QMComboBox_dragLeaveEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::QDragLeaveEvent* a0;
        sipQMComboBox *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ8", &sipSelf, sipType_QMComboBox, &sipCpp, sipType_QDragLeaveEvent, &a0))
        {
            sipCpp->sipProtectVirt_dragLeaveEvent(sipSelfWasArg,a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QMComboBox, sipName_dragLeaveEvent, SIP_NULLPTR);

    return SIP_NULLPTR;
}


extern "C" {static PyObject *meth_QMComboBox_dropEvent(PyObject *, PyObject *);}
static PyObject *meth_QMComboBox_dropEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::QDropEvent* a0;
        sipQMComboBox *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ8", &sipSelf, sipType_QMComboBox, &sipCpp, sipType_QDropEvent, &a0))
        {
            sipCpp->sipProtectVirt_dropEvent(sipSelfWasArg,a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QMComboBox, sipName_dropEvent, SIP_NULLPTR);

    return SIP_NULLPTR;
}


extern "C" {static PyObject *meth_QMComboBox_metric(PyObject *, PyObject *);}
static PyObject *meth_QMComboBox_metric(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::QPaintDevice::PaintDeviceMetric a0;
        const sipQMComboBox *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BE", &sipSelf, sipType_QMComboBox, &sipCpp, sipType_QPaintDevice_PaintDeviceMetric, &a0))
        {
            int sipRes;

            sipRes = sipCpp->sipProtectVirt_metric(sipSelfWasArg,a0);

            return SIPLong_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QMComboBox, sipName_metric, SIP_NULLPTR);

    return SIP_NULLPTR;
}


extern "C" {static PyObject *meth_QMComboBox_updateMicroFocus(PyObject *, PyObject *);}
static PyObject *meth_QMComboBox_updateMicroFocus(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        sipQMComboBox *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QMComboBox, &sipCpp))
        {
            sipCpp->sipProtect_updateMicroFocus();

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QMComboBox, sipName_updateMicroFocus, SIP_NULLPTR);

    return SIP_NULLPTR;
}


extern "C" {static PyObject *meth_QMComboBox_create(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QMComboBox_create(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::WId a0def = 0;
         ::WId* a0 = &a0def;
        int a0State = 0;
        bool a1 = 1;
        bool a2 = 1;
        sipQMComboBox *sipCpp;

        static const char *sipKwdList[] = {
            sipName_window,
            sipName_initializeWindow,
            sipName_destroyOldWindow,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "B|J1bb", &sipSelf, sipType_QMComboBox, &sipCpp, sipType_quintptr,&a0, &a0State, &a1, &a2))
        {
            sipCpp->sipProtect_create(*a0,a1,a2);
            sipReleaseType(a0,sipType_quintptr,a0State);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QMComboBox, sipName_create, SIP_NULLPTR);

    return SIP_NULLPTR;
}


extern "C" {static PyObject *meth_QMComboBox_destroy(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QMComboBox_destroy(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        bool a0 = 1;
        bool a1 = 1;
        sipQMComboBox *sipCpp;

        static const char *sipKwdList[] = {
            sipName_destroyWindow,
            sipName_destroySubWindows,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "B|bb", &sipSelf, sipType_QMComboBox, &sipCpp, &a0, &a1))
        {
            sipCpp->sipProtect_destroy(a0,a1);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QMComboBox, sipName_destroy, SIP_NULLPTR);

    return SIP_NULLPTR;
}


extern "C" {static PyObject *meth_QMComboBox_focusNextPrevChild(PyObject *, PyObject *);}
static PyObject *meth_QMComboBox_focusNextPrevChild(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
        bool a0;
        sipQMComboBox *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bb", &sipSelf, sipType_QMComboBox, &sipCpp, &a0))
        {
            bool sipRes;

            sipRes = sipCpp->sipProtectVirt_focusNextPrevChild(sipSelfWasArg,a0);

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QMComboBox, sipName_focusNextPrevChild, SIP_NULLPTR);

    return SIP_NULLPTR;
}


extern "C" {static PyObject *meth_QMComboBox_focusNextChild(PyObject *, PyObject *);}
static PyObject *meth_QMComboBox_focusNextChild(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        sipQMComboBox *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QMComboBox, &sipCpp))
        {
            bool sipRes;

            sipRes = sipCpp->sipProtect_focusNextChild();

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QMComboBox, sipName_focusNextChild, SIP_NULLPTR);

    return SIP_NULLPTR;
}


extern "C" {static PyObject *meth_QMComboBox_focusPreviousChild(PyObject *, PyObject *);}
static PyObject *meth_QMComboBox_focusPreviousChild(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        sipQMComboBox *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QMComboBox, &sipCpp))
        {
            bool sipRes;

            sipRes = sipCpp->sipProtect_focusPreviousChild();

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QMComboBox, sipName_focusPreviousChild, SIP_NULLPTR);

    return SIP_NULLPTR;
}


extern "C" {static PyObject *meth_QMComboBox_nativeEvent(PyObject *, PyObject *);}
static PyObject *meth_QMComboBox_nativeEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
        const  ::QByteArray* a0;
        int a0State = 0;
        void* a1;
        long a2;
        sipQMComboBox *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ1v", &sipSelf, sipType_QMComboBox, &sipCpp, sipType_QByteArray, &a0, &a0State, &a1))
        {
            bool sipRes;

            sipRes = sipCpp->sipProtectVirt_nativeEvent(sipSelfWasArg,*a0,a1,&a2);
            sipReleaseType(const_cast< ::QByteArray *>(a0),sipType_QByteArray,a0State);

            return sipBuildResult(0,"(bl)",sipRes,a2);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QMComboBox, sipName_nativeEvent, SIP_NULLPTR);

    return SIP_NULLPTR;
}


extern "C" {static PyObject *meth_QMComboBox_sharedPainter(PyObject *, PyObject *);}
static PyObject *meth_QMComboBox_sharedPainter(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
        const sipQMComboBox *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QMComboBox, &sipCpp))
        {
             ::QPainter*sipRes;

            sipRes = sipCpp->sipProtectVirt_sharedPainter(sipSelfWasArg);

            return sipConvertFromType(sipRes,sipType_QPainter,SIP_NULLPTR);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QMComboBox, sipName_sharedPainter, SIP_NULLPTR);

    return SIP_NULLPTR;
}


extern "C" {static PyObject *meth_QMComboBox_initPainter(PyObject *, PyObject *);}
static PyObject *meth_QMComboBox_initPainter(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::QPainter* a0;
        const sipQMComboBox *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ8", &sipSelf, sipType_QMComboBox, &sipCpp, sipType_QPainter, &a0))
        {
            sipCpp->sipProtectVirt_initPainter(sipSelfWasArg,a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QMComboBox, sipName_initPainter, SIP_NULLPTR);

    return SIP_NULLPTR;
}


extern "C" {static PyObject *meth_QMComboBox_initStyleOption(PyObject *, PyObject *);}
static PyObject *meth_QMComboBox_initStyleOption(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
         ::QStyleOptionComboBox* a0;
        const sipQMComboBox *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ8", &sipSelf, sipType_QMComboBox, &sipCpp, sipType_QStyleOptionComboBox, &a0))
        {
            sipCpp->sipProtect_initStyleOption(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QMComboBox, sipName_initStyleOption, SIP_NULLPTR);

    return SIP_NULLPTR;
}


extern "C" {static PyObject *meth_QMComboBox_changeEvent(PyObject *, PyObject *);}
static PyObject *meth_QMComboBox_changeEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::QEvent* a0;
        sipQMComboBox *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ8", &sipSelf, sipType_QMComboBox, &sipCpp, sipType_QEvent, &a0))
        {
            sipCpp->sipProtectVirt_changeEvent(sipSelfWasArg,a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QMComboBox, sipName_changeEvent, SIP_NULLPTR);

    return SIP_NULLPTR;
}


extern "C" {static PyObject *meth_QMComboBox_resizeEvent(PyObject *, PyObject *);}
static PyObject *meth_QMComboBox_resizeEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::QResizeEvent* a0;
        sipQMComboBox *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ8", &sipSelf, sipType_QMComboBox, &sipCpp, sipType_QResizeEvent, &a0))
        {
            sipCpp->sipProtectVirt_resizeEvent(sipSelfWasArg,a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QMComboBox, sipName_resizeEvent, SIP_NULLPTR);

    return SIP_NULLPTR;
}


extern "C" {static PyObject *meth_QMComboBox_paintEvent(PyObject *, PyObject *);}
static PyObject *meth_QMComboBox_paintEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::QPaintEvent* a0;
        sipQMComboBox *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ8", &sipSelf, sipType_QMComboBox, &sipCpp, sipType_QPaintEvent, &a0))
        {
            sipCpp->sipProtectVirt_paintEvent(sipSelfWasArg,a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QMComboBox, sipName_paintEvent, SIP_NULLPTR);

    return SIP_NULLPTR;
}


extern "C" {static PyObject *meth_QMComboBox_showEvent(PyObject *, PyObject *);}
static PyObject *meth_QMComboBox_showEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::QShowEvent* a0;
        sipQMComboBox *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ8", &sipSelf, sipType_QMComboBox, &sipCpp, sipType_QShowEvent, &a0))
        {
            sipCpp->sipProtectVirt_showEvent(sipSelfWasArg,a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QMComboBox, sipName_showEvent, SIP_NULLPTR);

    return SIP_NULLPTR;
}


extern "C" {static PyObject *meth_QMComboBox_hideEvent(PyObject *, PyObject *);}
static PyObject *meth_QMComboBox_hideEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::QHideEvent* a0;
        sipQMComboBox *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ8", &sipSelf, sipType_QMComboBox, &sipCpp, sipType_QHideEvent, &a0))
        {
            sipCpp->sipProtectVirt_hideEvent(sipSelfWasArg,a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QMComboBox, sipName_hideEvent, SIP_NULLPTR);

    return SIP_NULLPTR;
}


extern "C" {static PyObject *meth_QMComboBox_mousePressEvent(PyObject *, PyObject *);}
static PyObject *meth_QMComboBox_mousePressEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::QMouseEvent* a0;
        sipQMComboBox *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ8", &sipSelf, sipType_QMComboBox, &sipCpp, sipType_QMouseEvent, &a0))
        {
            sipCpp->sipProtectVirt_mousePressEvent(sipSelfWasArg,a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QMComboBox, sipName_mousePressEvent, SIP_NULLPTR);

    return SIP_NULLPTR;
}


extern "C" {static PyObject *meth_QMComboBox_mouseReleaseEvent(PyObject *, PyObject *);}
static PyObject *meth_QMComboBox_mouseReleaseEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::QMouseEvent* a0;
        sipQMComboBox *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ8", &sipSelf, sipType_QMComboBox, &sipCpp, sipType_QMouseEvent, &a0))
        {
            sipCpp->sipProtectVirt_mouseReleaseEvent(sipSelfWasArg,a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QMComboBox, sipName_mouseReleaseEvent, SIP_NULLPTR);

    return SIP_NULLPTR;
}


extern "C" {static PyObject *meth_QMComboBox_keyReleaseEvent(PyObject *, PyObject *);}
static PyObject *meth_QMComboBox_keyReleaseEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::QKeyEvent* a0;
        sipQMComboBox *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ8", &sipSelf, sipType_QMComboBox, &sipCpp, sipType_QKeyEvent, &a0))
        {
            sipCpp->sipProtectVirt_keyReleaseEvent(sipSelfWasArg,a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QMComboBox, sipName_keyReleaseEvent, SIP_NULLPTR);

    return SIP_NULLPTR;
}


extern "C" {static PyObject *meth_QMComboBox_wheelEvent(PyObject *, PyObject *);}
static PyObject *meth_QMComboBox_wheelEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::QWheelEvent* a0;
        sipQMComboBox *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ8", &sipSelf, sipType_QMComboBox, &sipCpp, sipType_QWheelEvent, &a0))
        {
            sipCpp->sipProtectVirt_wheelEvent(sipSelfWasArg,a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QMComboBox, sipName_wheelEvent, SIP_NULLPTR);

    return SIP_NULLPTR;
}


extern "C" {static PyObject *meth_QMComboBox_contextMenuEvent(PyObject *, PyObject *);}
static PyObject *meth_QMComboBox_contextMenuEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::QContextMenuEvent* a0;
        sipQMComboBox *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ8", &sipSelf, sipType_QMComboBox, &sipCpp, sipType_QContextMenuEvent, &a0))
        {
            sipCpp->sipProtectVirt_contextMenuEvent(sipSelfWasArg,a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QMComboBox, sipName_contextMenuEvent, SIP_NULLPTR);

    return SIP_NULLPTR;
}


extern "C" {static PyObject *meth_QMComboBox_inputMethodEvent(PyObject *, PyObject *);}
static PyObject *meth_QMComboBox_inputMethodEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::QInputMethodEvent* a0;
        sipQMComboBox *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ8", &sipSelf, sipType_QMComboBox, &sipCpp, sipType_QInputMethodEvent, &a0))
        {
            sipCpp->sipProtectVirt_inputMethodEvent(sipSelfWasArg,a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QMComboBox, sipName_inputMethodEvent, SIP_NULLPTR);

    return SIP_NULLPTR;
}


extern "C" {static PyObject *meth_QMComboBox_setIndexFromText(PyObject *, PyObject *);}
static PyObject *meth_QMComboBox_setIndexFromText(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = SIP_NULLPTR;

    {
        const  ::QString* a0;
        int a0State = 0;
         ::QMComboBox *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ1", &sipSelf, sipType_QMComboBox, &sipCpp, sipType_QString,&a0, &a0State))
        {
            sipCpp->setIndexFromText(*a0);
            sipReleaseType(const_cast< ::QString *>(a0),sipType_QString,a0State);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QMComboBox, sipName_setIndexFromText, SIP_NULLPTR);

    return SIP_NULLPTR;
}


extern "C" {static PyObject *meth_QMComboBox_focusInEvent(PyObject *, PyObject *);}
static PyObject *meth_QMComboBox_focusInEvent(PyObject *, PyObject *)
{

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(SIP_NULLPTR, sipName_QMComboBox, sipName_focusInEvent, SIP_NULLPTR);

    return SIP_NULLPTR;
}


extern "C" {static PyObject *meth_QMComboBox_focusOutEvent(PyObject *, PyObject *);}
static PyObject *meth_QMComboBox_focusOutEvent(PyObject *, PyObject *)
{

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(SIP_NULLPTR, sipName_QMComboBox, sipName_focusOutEvent, SIP_NULLPTR);

    return SIP_NULLPTR;
}


extern "C" {static PyObject *meth_QMComboBox_keyPressEvent(PyObject *, PyObject *);}
static PyObject *meth_QMComboBox_keyPressEvent(PyObject *, PyObject *)
{

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(SIP_NULLPTR, sipName_QMComboBox, sipName_keyPressEvent, SIP_NULLPTR);

    return SIP_NULLPTR;
}


/* Cast a pointer to a type somewhere in its inheritance hierarchy. */
extern "C" {static void *cast_QMComboBox(void *, const sipTypeDef *);}
static void *cast_QMComboBox(void *sipCppV, const sipTypeDef *targetType)
{
     ::QMComboBox *sipCpp = reinterpret_cast< ::QMComboBox *>(sipCppV);

    if (targetType == sipType_QComboBox)
        return static_cast< ::QComboBox *>(sipCpp);

    if (targetType == sipType_QWidget)
        return static_cast< ::QWidget *>(sipCpp);

    if (targetType == sipType_QObject)
        return static_cast< ::QObject *>(sipCpp);

    if (targetType == sipType_QPaintDevice)
        return static_cast< ::QPaintDevice *>(sipCpp);

    return sipCppV;
}


/* Call the instance's destructor. */
extern "C" {static void release_QMComboBox(void *, int);}
static void release_QMComboBox(void *sipCppV, int)
{
     ::QMComboBox *sipCpp = reinterpret_cast< ::QMComboBox *>(sipCppV);

    if (QThread::currentThread() == sipCpp->thread())
        delete sipCpp;
    else
        sipCpp->deleteLater();
}


extern "C" {static void dealloc_QMComboBox(sipSimpleWrapper *);}
static void dealloc_QMComboBox(sipSimpleWrapper *sipSelf)
{
    if (sipIsDerivedClass(sipSelf))
        reinterpret_cast<sipQMComboBox *>(sipGetAddress(sipSelf))->sipPySelf = SIP_NULLPTR;

    if (sipIsOwnedByPython(sipSelf))
    {
        release_QMComboBox(sipGetAddress(sipSelf), sipIsDerivedClass(sipSelf));
    }
}


extern "C" {static void *init_type_QMComboBox(sipSimpleWrapper *, PyObject *, PyObject *, PyObject **, PyObject **, PyObject **);}
static void *init_type_QMComboBox(sipSimpleWrapper *sipSelf, PyObject *sipArgs, PyObject *sipKwds, PyObject **sipUnused, PyObject **, PyObject **sipParseErr)
{
    sipQMComboBox *sipCpp = SIP_NULLPTR;

    {
         ::QWidget* a0 = 0;

        if (sipParseKwdArgs(sipParseErr, sipArgs, sipKwds, SIP_NULLPTR, sipUnused, "|J8", sipType_QWidget, &a0))
        {
            sipCpp = new sipQMComboBox(a0);

            sipCpp->sipPySelf = sipSelf;

            return sipCpp;
        }
    }

    return SIP_NULLPTR;
}


/* Define this type's super-types. */
static sipEncodedTypeDef supers_QMComboBox[] = {{2, 2, 1}};


static PyMethodDef methods_QMComboBox[] = {
    {SIP_MLNAME_CAST(sipName_actionEvent), meth_QMComboBox_actionEvent, METH_VARARGS, SIP_NULLPTR},
    {SIP_MLNAME_CAST(sipName_changeEvent), meth_QMComboBox_changeEvent, METH_VARARGS, SIP_NULLPTR},
    {SIP_MLNAME_CAST(sipName_childEvent), meth_QMComboBox_childEvent, METH_VARARGS, SIP_NULLPTR},
    {SIP_MLNAME_CAST(sipName_closeEvent), meth_QMComboBox_closeEvent, METH_VARARGS, SIP_NULLPTR},
    {SIP_MLNAME_CAST(sipName_connectNotify), meth_QMComboBox_connectNotify, METH_VARARGS, SIP_NULLPTR},
    {SIP_MLNAME_CAST(sipName_contextMenuEvent), meth_QMComboBox_contextMenuEvent, METH_VARARGS, SIP_NULLPTR},
    {SIP_MLNAME_CAST(sipName_create), SIP_MLMETH_CAST(meth_QMComboBox_create), METH_VARARGS|METH_KEYWORDS, SIP_NULLPTR},
    {SIP_MLNAME_CAST(sipName_customEvent), meth_QMComboBox_customEvent, METH_VARARGS, SIP_NULLPTR},
    {SIP_MLNAME_CAST(sipName_destroy), SIP_MLMETH_CAST(meth_QMComboBox_destroy), METH_VARARGS|METH_KEYWORDS, SIP_NULLPTR},
    {SIP_MLNAME_CAST(sipName_disconnectNotify), meth_QMComboBox_disconnectNotify, METH_VARARGS, SIP_NULLPTR},
    {SIP_MLNAME_CAST(sipName_dragEnterEvent), meth_QMComboBox_dragEnterEvent, METH_VARARGS, SIP_NULLPTR},
    {SIP_MLNAME_CAST(sipName_dragLeaveEvent), meth_QMComboBox_dragLeaveEvent, METH_VARARGS, SIP_NULLPTR},
    {SIP_MLNAME_CAST(sipName_dragMoveEvent), meth_QMComboBox_dragMoveEvent, METH_VARARGS, SIP_NULLPTR},
    {SIP_MLNAME_CAST(sipName_dropEvent), meth_QMComboBox_dropEvent, METH_VARARGS, SIP_NULLPTR},
    {SIP_MLNAME_CAST(sipName_enterEvent), meth_QMComboBox_enterEvent, METH_VARARGS, SIP_NULLPTR},
    {SIP_MLNAME_CAST(sipName_focusInEvent), meth_QMComboBox_focusInEvent, METH_VARARGS, SIP_NULLPTR},
    {SIP_MLNAME_CAST(sipName_focusNextChild), meth_QMComboBox_focusNextChild, METH_VARARGS, SIP_NULLPTR},
    {SIP_MLNAME_CAST(sipName_focusNextPrevChild), meth_QMComboBox_focusNextPrevChild, METH_VARARGS, SIP_NULLPTR},
    {SIP_MLNAME_CAST(sipName_focusOutEvent), meth_QMComboBox_focusOutEvent, METH_VARARGS, SIP_NULLPTR},
    {SIP_MLNAME_CAST(sipName_focusPreviousChild), meth_QMComboBox_focusPreviousChild, METH_VARARGS, SIP_NULLPTR},
    {SIP_MLNAME_CAST(sipName_hideEvent), meth_QMComboBox_hideEvent, METH_VARARGS, SIP_NULLPTR},
    {SIP_MLNAME_CAST(sipName_initPainter), meth_QMComboBox_initPainter, METH_VARARGS, SIP_NULLPTR},
    {SIP_MLNAME_CAST(sipName_initStyleOption), meth_QMComboBox_initStyleOption, METH_VARARGS, SIP_NULLPTR},
    {SIP_MLNAME_CAST(sipName_inputMethodEvent), meth_QMComboBox_inputMethodEvent, METH_VARARGS, SIP_NULLPTR},
    {SIP_MLNAME_CAST(sipName_isSignalConnected), meth_QMComboBox_isSignalConnected, METH_VARARGS, SIP_NULLPTR},
    {SIP_MLNAME_CAST(sipName_keyPressEvent), meth_QMComboBox_keyPressEvent, METH_VARARGS, SIP_NULLPTR},
    {SIP_MLNAME_CAST(sipName_keyReleaseEvent), meth_QMComboBox_keyReleaseEvent, METH_VARARGS, SIP_NULLPTR},
    {SIP_MLNAME_CAST(sipName_leaveEvent), meth_QMComboBox_leaveEvent, METH_VARARGS, SIP_NULLPTR},
    {SIP_MLNAME_CAST(sipName_metric), meth_QMComboBox_metric, METH_VARARGS, SIP_NULLPTR},
    {SIP_MLNAME_CAST(sipName_mouseDoubleClickEvent), meth_QMComboBox_mouseDoubleClickEvent, METH_VARARGS, SIP_NULLPTR},
    {SIP_MLNAME_CAST(sipName_mouseMoveEvent), meth_QMComboBox_mouseMoveEvent, METH_VARARGS, SIP_NULLPTR},
    {SIP_MLNAME_CAST(sipName_mousePressEvent), meth_QMComboBox_mousePressEvent, METH_VARARGS, SIP_NULLPTR},
    {SIP_MLNAME_CAST(sipName_mouseReleaseEvent), meth_QMComboBox_mouseReleaseEvent, METH_VARARGS, SIP_NULLPTR},
    {SIP_MLNAME_CAST(sipName_moveEvent), meth_QMComboBox_moveEvent, METH_VARARGS, SIP_NULLPTR},
    {SIP_MLNAME_CAST(sipName_nativeEvent), meth_QMComboBox_nativeEvent, METH_VARARGS, SIP_NULLPTR},
    {SIP_MLNAME_CAST(sipName_paintEvent), meth_QMComboBox_paintEvent, METH_VARARGS, SIP_NULLPTR},
    {SIP_MLNAME_CAST(sipName_receivers), meth_QMComboBox_receivers, METH_VARARGS, SIP_NULLPTR},
    {SIP_MLNAME_CAST(sipName_resizeEvent), meth_QMComboBox_resizeEvent, METH_VARARGS, SIP_NULLPTR},
    {SIP_MLNAME_CAST(sipName_sender), meth_QMComboBox_sender, METH_VARARGS, SIP_NULLPTR},
    {SIP_MLNAME_CAST(sipName_senderSignalIndex), meth_QMComboBox_senderSignalIndex, METH_VARARGS, SIP_NULLPTR},
    {SIP_MLNAME_CAST(sipName_setIndexFromText), meth_QMComboBox_setIndexFromText, METH_VARARGS, SIP_NULLPTR},
    {SIP_MLNAME_CAST(sipName_sharedPainter), meth_QMComboBox_sharedPainter, METH_VARARGS, SIP_NULLPTR},
    {SIP_MLNAME_CAST(sipName_showEvent), meth_QMComboBox_showEvent, METH_VARARGS, SIP_NULLPTR},
    {SIP_MLNAME_CAST(sipName_tabletEvent), meth_QMComboBox_tabletEvent, METH_VARARGS, SIP_NULLPTR},
    {SIP_MLNAME_CAST(sipName_timerEvent), meth_QMComboBox_timerEvent, METH_VARARGS, SIP_NULLPTR},
    {SIP_MLNAME_CAST(sipName_updateMicroFocus), meth_QMComboBox_updateMicroFocus, METH_VARARGS, SIP_NULLPTR},
    {SIP_MLNAME_CAST(sipName_wheelEvent), meth_QMComboBox_wheelEvent, METH_VARARGS, SIP_NULLPTR}
};


/* Define this type's signals. */
static const pyqt5QtSignal signals_QMComboBox[] = {
    {"escaped()", SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR},
    {"indexEdited(int)", SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR},
    {"textEdited(QString)", SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR},
    {SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR}
};


static pyqt5ClassPluginDef plugin_QMComboBox = {
    & ::QMComboBox::staticMetaObject,
    0,
    signals_QMComboBox,
    SIP_NULLPTR
};


sipClassTypeDef sipTypeDef_pyqtpvwidgets_QMComboBox = {
    {
        -1,
        SIP_NULLPTR,
        SIP_NULLPTR,
        SIP_TYPE_SCC|SIP_TYPE_SUPER_INIT|SIP_TYPE_CLASS,
        sipNameNr_QMComboBox,
        {SIP_NULLPTR},
        &plugin_QMComboBox
    },
    {
        sipNameNr_QMComboBox,
        {0, 0, 1},
        47, methods_QMComboBox,
        0, SIP_NULLPTR,
        0, SIP_NULLPTR,
        {SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR},
    },
    SIP_NULLPTR,
    -1,
    -1,
    supers_QMComboBox,
    SIP_NULLPTR,
    init_type_QMComboBox,
    SIP_NULLPTR,
    SIP_NULLPTR,
#if PY_MAJOR_VERSION >= 3
    SIP_NULLPTR,
    SIP_NULLPTR,
#else
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
#endif
    dealloc_QMComboBox,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    release_QMComboBox,
    cast_QMComboBox,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR
};
